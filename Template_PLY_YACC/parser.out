Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> comandos
Rule 2     comandos -> <empty>
Rule 3     comandos -> comandos comando
Rule 4     comando -> atrib
Rule 5     comando -> Exp
Rule 6     atrib -> ID = Exp
Rule 7     Exp -> Exp + Exp
Rule 8     Exp -> Exp - Exp
Rule 9     Exp -> INT
Rule 10    Exp -> ID

Terminals, with rules where they appear

+                    : 7
-                    : 8
=                    : 6
ID                   : 6 10
INT                  : 9
error                : 

Nonterminals, with rules where they appear

Exp                  : 5 6 7 7 8 8
atrib                : 4
comando              : 3
comandos             : 1 3
prog                 : 0

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . comandos
    (2) comandos -> .
    (3) comandos -> . comandos comando

    ID              reduce using rule 2 (comandos -> .)
    INT             reduce using rule 2 (comandos -> .)
    $end            reduce using rule 2 (comandos -> .)

    prog                           shift and go to state 1
    comandos                       shift and go to state 2

state 1

    (0) S' -> prog .



state 2

    (1) prog -> comandos .
    (3) comandos -> comandos . comando
    (4) comando -> . atrib
    (5) comando -> . Exp
    (6) atrib -> . ID = Exp
    (7) Exp -> . Exp + Exp
    (8) Exp -> . Exp - Exp
    (9) Exp -> . INT
    (10) Exp -> . ID

    $end            reduce using rule 1 (prog -> comandos .)
    ID              shift and go to state 6
    INT             shift and go to state 7

    comando                        shift and go to state 3
    atrib                          shift and go to state 4
    Exp                            shift and go to state 5

state 3

    (3) comandos -> comandos comando .

    ID              reduce using rule 3 (comandos -> comandos comando .)
    INT             reduce using rule 3 (comandos -> comandos comando .)
    $end            reduce using rule 3 (comandos -> comandos comando .)


state 4

    (4) comando -> atrib .

    ID              reduce using rule 4 (comando -> atrib .)
    INT             reduce using rule 4 (comando -> atrib .)
    $end            reduce using rule 4 (comando -> atrib .)


state 5

    (5) comando -> Exp .
    (7) Exp -> Exp . + Exp
    (8) Exp -> Exp . - Exp

    ID              reduce using rule 5 (comando -> Exp .)
    INT             reduce using rule 5 (comando -> Exp .)
    $end            reduce using rule 5 (comando -> Exp .)
    +               shift and go to state 8
    -               shift and go to state 9


state 6

    (6) atrib -> ID . = Exp
    (10) Exp -> ID .

    =               shift and go to state 10
    +               reduce using rule 10 (Exp -> ID .)
    -               reduce using rule 10 (Exp -> ID .)
    ID              reduce using rule 10 (Exp -> ID .)
    INT             reduce using rule 10 (Exp -> ID .)
    $end            reduce using rule 10 (Exp -> ID .)


state 7

    (9) Exp -> INT .

    +               reduce using rule 9 (Exp -> INT .)
    -               reduce using rule 9 (Exp -> INT .)
    ID              reduce using rule 9 (Exp -> INT .)
    INT             reduce using rule 9 (Exp -> INT .)
    $end            reduce using rule 9 (Exp -> INT .)


state 8

    (7) Exp -> Exp + . Exp
    (7) Exp -> . Exp + Exp
    (8) Exp -> . Exp - Exp
    (9) Exp -> . INT
    (10) Exp -> . ID

    INT             shift and go to state 7
    ID              shift and go to state 12

    Exp                            shift and go to state 11

state 9

    (8) Exp -> Exp - . Exp
    (7) Exp -> . Exp + Exp
    (8) Exp -> . Exp - Exp
    (9) Exp -> . INT
    (10) Exp -> . ID

    INT             shift and go to state 7
    ID              shift and go to state 12

    Exp                            shift and go to state 13

state 10

    (6) atrib -> ID = . Exp
    (7) Exp -> . Exp + Exp
    (8) Exp -> . Exp - Exp
    (9) Exp -> . INT
    (10) Exp -> . ID

    INT             shift and go to state 7
    ID              shift and go to state 12

    Exp                            shift and go to state 14

state 11

    (7) Exp -> Exp + Exp .
    (7) Exp -> Exp . + Exp
    (8) Exp -> Exp . - Exp

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    ID              reduce using rule 7 (Exp -> Exp + Exp .)
    INT             reduce using rule 7 (Exp -> Exp + Exp .)
    $end            reduce using rule 7 (Exp -> Exp + Exp .)
    +               shift and go to state 8
    -               shift and go to state 9

  ! +               [ reduce using rule 7 (Exp -> Exp + Exp .) ]
  ! -               [ reduce using rule 7 (Exp -> Exp + Exp .) ]


state 12

    (10) Exp -> ID .

    +               reduce using rule 10 (Exp -> ID .)
    -               reduce using rule 10 (Exp -> ID .)
    ID              reduce using rule 10 (Exp -> ID .)
    INT             reduce using rule 10 (Exp -> ID .)
    $end            reduce using rule 10 (Exp -> ID .)


state 13

    (8) Exp -> Exp - Exp .
    (7) Exp -> Exp . + Exp
    (8) Exp -> Exp . - Exp

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    ID              reduce using rule 8 (Exp -> Exp - Exp .)
    INT             reduce using rule 8 (Exp -> Exp - Exp .)
    $end            reduce using rule 8 (Exp -> Exp - Exp .)
    +               shift and go to state 8
    -               shift and go to state 9

  ! +               [ reduce using rule 8 (Exp -> Exp - Exp .) ]
  ! -               [ reduce using rule 8 (Exp -> Exp - Exp .) ]


state 14

    (6) atrib -> ID = Exp .
    (7) Exp -> Exp . + Exp
    (8) Exp -> Exp . - Exp

    ID              reduce using rule 6 (atrib -> ID = Exp .)
    INT             reduce using rule 6 (atrib -> ID = Exp .)
    $end            reduce using rule 6 (atrib -> ID = Exp .)
    +               shift and go to state 8
    -               shift and go to state 9

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for + in state 11 resolved as shift
WARNING: shift/reduce conflict for - in state 11 resolved as shift
WARNING: shift/reduce conflict for + in state 13 resolved as shift
WARNING: shift/reduce conflict for - in state 13 resolved as shift
